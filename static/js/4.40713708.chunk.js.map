{"version":3,"sources":["components/dialogs/Dialogs.module.css","components/dialogs/dialogItem/DialogsItem.jsx","components/dialogs/message/Message.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","palceholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,iGCWpMC,EARI,SAAEC,GACjB,OACI,qBAAKC,UAAWC,IAAEC,OAAS,GAAKD,IAAEE,OAAlC,SACI,eAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAjC,cAAyCN,EAAMO,KAA/C,UCKGC,EARC,SAACR,GACb,OACI,qBAAKC,UAAaC,IAAEC,OAApB,SACKH,EAAMS,W,iCCiCbC,EAAcC,YAAiB,IAa/BC,EAAsBC,YAAU,CACpCC,KAAM,wBADoBD,EAXL,SAACb,GACtB,OACE,uBAAMe,SAAUf,EAAMgB,aAAtB,UACG,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GACjDH,KAAK,iBAAiBe,YAAY,yBAEnC,8BAAK,kDAOEC,EA5CC,SAACvB,GAEb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAzB,GAAM,OAAI,cAAC,EAAD,CAAYI,KAAOJ,EAAOI,KAAuBD,GAAKH,EAAOG,IAAvBH,EAAOG,OAC5FuB,EAAmBL,EAAMM,SAASF,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAAStB,QAAUsB,EAAEtB,SAAesB,EAAEzB,OAChEkB,EAAMQ,eAM3B,OAAIhC,EAAMiC,OAKR,sBAAKhC,UAAWC,IAAEyB,QAAlB,UACE,qBAAK1B,UAAWC,IAAEgC,aAAlB,SACMR,IAEN,qBAAKzB,UAAcC,IAAE4B,SAArB,SACG,8BAAOD,MAER,cAACjB,EAAD,CAAqBG,SAhBP,SAACoB,GACjBnC,EAAMoC,YAAYD,EAAOH,sBAIpB,cAAC,IAAD,CAAU3B,GAAI,Y,yBCAZgC,sBACbC,aAnBoB,SAACd,GACrB,MAAM,CACJC,YAAaD,EAAMC,gBAII,SAACc,GAC1B,MAAO,CACHH,YAAa,SAACJ,GACZO,EAASC,YAAmBR,SAWlCS,IAFaJ,CAGbd","file":"static/js/4.40713708.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2ulF2\",\"dialogsItems\":\"Dialogs_dialogsItems__qyPFE\",\"dialog\":\"Dialogs_dialog__2kGh0\",\"active\":\"Dialogs_active__g1Xjh\",\"messages\":\"Dialogs_messages__1oL0u\",\"message\":\"Dialogs_message__34cnR\"};","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from '../Dialogs.module.css';\r\n\r\nconst DialogItem = ( props ) => {\r\n    return (\r\n        <div className={s.dialog + '' + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id }> { props.name } </NavLink>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) =>{\r\n    return(\r\n        <div className = {s.dialog}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport DialogItem from './dialogItem/DialogsItem';\r\nimport Message from './message/Message';\r\nimport s from './Dialogs.module.css';\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/preloader/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    \r\n    let dialogsElements = state.dialogs.map( dialog => <DialogItem name={ dialog.name } key={dialog.id} id={ dialog.id } /> );\r\n    let messagesElements = state.messages.map(m => <Message message={ m.message } key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n    \r\n    if(!props.isAuth){\r\n      return <Redirect to={'/login'} />;\r\n    };\r\n\r\n    return (\r\n      <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>\r\n            { dialogsElements }\r\n        </div>\r\n        <div className = { s.messages }>\r\n           <div>{ messagesElements }</div> \r\n        </div>\r\n          <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>  \r\n    );\r\n}\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n       <div>\r\n         <Field component={Textarea} validate={[required, maxLength50]}\r\n         name=\"newMessageBody\" palceholder=\"Enter your message\" />\r\n        </div>\r\n        <div><button>Send</button></div>\r\n    </form>\r\n  )\r\n}\r\nconst AddMessageFormRedux = reduxForm({\r\n  form: \"dialogAddMessageForm\"\r\n})(AddMessageForm);\r\nexport default Dialogs;","import React from 'react';\r\nimport { sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      sendMessage: (newMessageBody) => {\r\n        dispatch(sendMessageCreator(newMessageBody));\r\n      }\r\n  }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}